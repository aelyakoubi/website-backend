{
  "info": {
    "name": "Events API Negative Tests",
    "_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
    "description": "Negatieve tests voor de Events API om foutafhandeling en validatie te testen",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "GET event by invalid ID",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/events/9999",
          "host": ["{{baseUrl}}"],
          "path": ["events", "9999"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", function () {",
              "    pm.response.to.have.status(404);",
              "});",
              "pm.test(\"Response body contains 'Event not found'\", function () {",
              "    pm.expect(pm.response.text()).to.include(\"Event not found\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "POST event with missing required fields",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Incomplete Event\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/events",
          "host": ["{{baseUrl}}"],
          "path": ["events"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "pm.test(\"Response contains validation error message\", function () {",
              "    pm.expect(pm.response.text()).to.include(\"validation\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "DELETE event with invalid ID format",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/events/abc",
          "host": ["{{baseUrl}}"],
          "path": ["events", "abc"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400 or 404\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([400, 404]);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ],
  "event": [],
  "variable": []
}
